name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]

permissions: read-all

env:
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_REMOTE_CACHE_SIGNATURE_KEY: ${{ secrets.TURBO_REMOTE_CACHE_SIGNATURE_KEY }}

jobs:
  build:
    name: Build and Test
    timeout-minutes: 15
    runs-on: ubuntu-latest
    permissions:
      checks: write # For trunk to post annotations
      contents: read # For repo checkout

    env:
      NEXT_PUBLIC_STORAGE_URL: ${{ vars.STORAGE_URL }}
      NEXT_PUBLIC_WALLET_CONNECT_ID: ${{ vars.WALLET_CONNECT_ID }}
      NEXT_PUBLIC_ANALYTICS_API_URL: ${{ vars.ANALYTICS_API_URL }}

      # Sentry
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      NEXT_PUBLIC_SENTRY_DSN_GOVERNANCE: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN_GOVERNANCE }}
      NEXT_PUBLIC_SENTRY_DSN_RESERVE: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN_RESERVE }}
      NEXT_PUBLIC_SENTRY_DSN_SWAP: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN_SWAP }}

      # Governance app environment variables
      NEXT_PUBLIC_VERCEL_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || 'preview' }}
      ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
      NEXT_PUBLIC_ETHERSCAN_API_URL: ${{ vars.ETHERSCAN_API_URL }}
      NEXT_PUBLIC_BLOCKSCOUT_API_URL: ${{ vars.BLOCKSCOUT_API_URL }}
      NEXT_PUBLIC_BLOCKSCOUT_GRAPHQL_URL: ${{ vars.BLOCKSCOUT_GRAPHQL_URL }}
      NEXT_PUBLIC_BLOCKSCOUT_GRAPHQL_URL_CELO_SEPOLIA: ${{ vars.BLOCKSCOUT_GRAPHQL_URL_CELO_SEPOLIA }}
      NEXT_PUBLIC_SUBGRAPH_URL: ${{ vars.SUBGRAPH_URL }}
      NEXT_PUBLIC_SUBGRAPH_URL_CELO_SEPOLIA: ${{ vars.SUBGRAPH_URL_CELO_SEPOLIA }}
      NEXT_PUBLIC_GRAPH_API_KEY: ${{ secrets.GRAPH_API_KEY }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 10.8.1
          run_install: false

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Trunk Code Quality
        uses: trunk-io/trunk-action@v1
        with:
          check-mode: all

      - name: Build
        run: pnpm build

      - name: Type check
        run: pnpm check-types
