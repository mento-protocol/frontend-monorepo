name: Smoke Test - Governance
on:
  deployment_status:

permissions:
  contents: read
  deployments: read
  pull-requests: write
  id-token: write

jobs:
  test:
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success' && contains(github.event.deployment_status.target_url, 'governancemento')
    uses: mento-protocol/mento-automation-tests/.github/workflows/governance-smoke-test.yml@main
    with:
      CUSTOM_URL: ${{ github.event.deployment_status.environment_url }}
      IS_MAINNET: "false"
    secrets: inherit

  comment:
    runs-on: ubuntu-latest
    needs: test
    if: always() && github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success' && contains(github.event.deployment_status.target_url, 'governancemento')
    steps:
      - name: Find PR for this commit
        id: find-pr
        uses: actions/github-script@v7
        with:
          script: |
            const sha = context.payload.deployment.sha;
            const { data: prs } = await github.rest.repos.listPullRequestsAssociatedWithCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: sha
            });

            if (prs.length > 0) {
                core.setOutput('pr_number', prs[0].number);
                return prs[0].number;
            } else {
                core.info('No PR found for this commit');
                return null;
            }

      - name: Post PR Comment
        if: steps.find-pr.outputs.pr_number
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ steps.find-pr.outputs.pr_number }};
            const status = '${{ needs.test.result }}';
            const env = context.payload.deployment.environment || 'unknown';
            const url = context.payload.deployment_status.environment_url || 'N/A';
            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;

            const emoji = status === 'success' ? '✅' : '❌';
            const statusText = status === 'success' ? 'passed' : 'failed';

            const body = `${emoji} **Governance Smoke Test ${statusText}**

            - **Environment**: ${env}
            - **Deployment URL**: ${url}
            - **Status**: ${statusText}
            - **Workflow Run**: [View Details](${runUrl})`;

            await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: body
            });

            core.info(`Posted comment to PR #${prNumber}`);
