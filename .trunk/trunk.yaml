# This file controls the behavior of Trunk: https://docs.trunk.io/cli
# To learn more about the format of this file, see https://docs.trunk.io/reference/trunk-yaml
version: 0.1
cli:
  version: 1.24.0

# Trunk provides extensibility via plugins. (https://docs.trunk.io/plugins)
plugins:
  sources:
    - id: trunk
      ref: v1.7.1
      uri: https://github.com/trunk-io/plugins

# Many linters and tools depend on runtimes - configure them here. (https://docs.trunk.io/runtimes)
runtimes:
  enabled:
    - go@1.21.0 # Required for various Go-based security and linting tools
    - node@22.16.0 # Node.js runtime for ESLint, Prettier, and other JS tools
    - python@3.10.8 # Python runtime for security scanners and other tools

# This is the section where you manage your linters. (https://docs.trunk.io/check/configuration)
lint:
  # Global ignore patterns for better performance and relevance
  ignore:
    - linters: [ALL]
      paths:
        - "**/node_modules/**" # Skip all dependency directories
        - "**/.next/**" # Skip Next.js build output
        - "**/dist/**" # Skip build/distribution directories
        - "**/build/**" # Skip build directories
        - "**/.turbo/**" # Skip Turborepo cache
    - linters: [trufflehog]
      paths:
        - packages/**/assets/** # Skip secret scanning on asset files (icons, etc.)

  # All enabled linters - organized by category for clarity
  enabled:
    # === CORE DEVELOPMENT LINTERS ===
    - taplo@0.9.3
    - eslint@9.31.0 # JavaScript/TypeScript linting (uses our existing configs)
    - prettier@3.6.2 # Code formatting with Tailwind CSS class sorting
    - git-diff-check # Validates git diffs for common issues

    # === CONFIGURATION & DOCUMENTATION ===
    - yamllint@1.37.1 # YAML configuration file linting
    - markdownlint@0.45.0 # Markdown documentation linting
    - markdown-link-check@3.13.7 # Validates that markdown links are not broken
    - dotenv-linter@3.3.0 # Environment file validation (.env files)

    # === SHELL SCRIPTING ===
    - shellcheck@0.10.0 # Shell script linting (catches common bash/sh errors)
    - shfmt@3.6.0 # Shell script formatting

    # === SECURITY SCANNING ===
    - checkov@3.2.451 # Infrastructure as Code security scanning
    - gitleaks@8.27.2 # Detects secrets in git history and commits
    - trufflehog@3.90.0 # Advanced secret detection with high accuracy
    - osv-scanner@2.0.3 # Vulnerability scanning for dependencies

    # === GITHUB ACTIONS ===
    - actionlint@1.7.7 # GitHub Actions workflow linting

    # === ASSET OPTIMIZATION ===
    - oxipng@9.1.5 # PNG image optimization (lossless compression)
    - svgo@4.0.0 # SVG optimization and cleanup

    # === CODE QUALITY & ORGANIZATION ===
    - sort-package-json@3.4.0 # Automatically sorts package.json files
    - pre-commit-hooks@4.6.0 # Standard pre-commit validations (trailing whitespace, etc.)
    - dustilock@1.2.0 # Dependency integrity checking

# Git hooks and automated actions
actions:
  enabled:
    - trunk-fmt-pre-commit # Auto-format files when committing
    - trunk-check-pre-push # Run checks before pushing
    - trunk-announce # Show announcements for new features
    - trunk-upgrade-available # Notify when Trunk updates are available
    - commitlint # Validate commit messages follow conventional format
